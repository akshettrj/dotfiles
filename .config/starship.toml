# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

command_timeout = 1000

# Replace the "‚ùØ" symbol in the prompt with "‚ûú"
[character] # The name of the module we are configuring is "character"
success_symbol = "[Û∞Åï](bold green)" # The "success_symbol" segment is being set to "‚ûú" with the color "bold green"
error_symbol = "[Û∞Åï](bold red)"     # The "error_symbol" segment is being set to "‚ûú" with the color "bold red"

[aws]
disabled = true

[azure]
disabled = true

[battery]
disabled = true

[buf]
disabled = true

[c]
disabled = true

[cmake]
disabled = true

[cobol]
disabled = true

[cmd_duration]
disabled = false
min_time = 1_500
show_milliseconds = true
show_notifications = true
min_time_to_notify = 45_000
notification_timeout = 3_000

[conda]
disabled = false
truncation_length = 1
symbol = "üÖí "
style = "bold green"
ignore_base = false

[container]
disabled = false
symbol = "‚¨¢"
style = "bold red dimmed"

[crystal]
disabled = true

[daml]
disabled = true

[dart]
disabled = true

[deno]
disabled = true

[directory]
disabled = false
truncation_length = 3
truncate_to_repo = false
read_only = "üîí"
truncation_symbol = ""

[docker_context]
disabled = true

[dotnet]
disabled = true

[elixir]
disabled = true

[elm]
disabled = true

[erlang]
disabled = true

[gcloud]
disabled = true

[git_branch]
disabled = false
always_show_remote = false
symbol = "ÓÇ† "
style = "bold purple"
only_attached = false

[git_commit]
disabled = false
commit_hash_length = 7
only_detached = false
tag_disabled = false

[git_state]
disabled = false

[git_metrics]
disabled = true

[git_status]
disabled = false
conflicted = "="
ahead = "‚á°"
behind = "‚á£"
diverged = "‚áï"
up_to_date = ""
untracked = "?"
stashed = "\\$"
modified = "!"
staged = "+"
renamed = "¬ª"
deleted = "‚úò"
style = "red bold"
ignore_submodules = false

[golang]
disabled = false
symbol = "Óòß "

[haskell]
disabled = true

[helm]
disabled = true

[hostname]
disabled = false
ssh_only = true
ssh_symbol = ""
trim_at = ""

[java]
disabled = true

[julia]
disabled = true

[kotlin]
disabled = true

[kubernetes]
disabled = true

[line_break]
disabled = true

[localip]
disabled = true

[lua]
disabled = true

[memory_usage]
disabled = true

[hg_branch]
disabled = true

[nim]
disabled = true

[nix_shell]
disabled = true

[nodejs]
disabled = true

[ocaml]
disabled = true

[openstack]
disabled = true

[package]
disabled = true

[perl]
disabled = true

[php]
disabled = true

[pulumi]
disabled = true

[purescript]
disabled = true

[python]
disabled = false
format = "via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"
version_format = "v${raw}"
symbol = "Óúº "
style = "yellow bold"
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
detect_extensions = []
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_folders = []

[rlang]
disabled = true

[raku]
disabled = true

[red]
disabled = true

[ruby]
disabled = true

[rust]
disabled = true

[scala]
disabled = true

[shell]
disabled = true

[shlvl]
disabled = true

[singularity]
disabled = true

[spack]
disabled = true

[sudo]
disabled = true

[swift]
disabled = true

[terraform]
disabled = true

[time]
disabled = false
use_12hr = false
style = "bold yellow"
utc_time_offset = "local"
time_range = "-"

[username]
disabled = false
show_always = false
format = "[$user]($style) in "

[vagrant]
disabled = true

[vlang]
disabled = true

[vcsh]
disabled = true

[zig]
disabled = true

[custom.lf_instance]
command = 'echo $LF_LEVEL'
when = ''' test "$LF_LEVEL" -gt 0 '''
format = '\(lf_level:[$output]($style)\) '
shell = ["bash", "--noprofile", "--norc"]

[custom.shell]
command = 'echo $STARSHIP_SHELL'
when = ''' test "$STARSHIP_SHELL" != "zsh" '''
format = '\([$output]($style)\) '
shell = ["bash", "--noprofile", "--norc"]
